{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Proyecto","text":"<p>Proyecto de gestor de volquetas en node.js con postgressql.</p>"},{"location":"#relacionado","title":"Relacionado:","text":"<p>Proyecto frontend en Reactjs: Frontend</p>"},{"location":"#librerias-npm-utilizadas","title":"Librerias NPM utilizadas","text":""},{"location":"#librerias-de-produccion","title":"Librerias de Produccion:","text":"<ul> <li>bcryptjs: <code>version: 2.4.3</code></li> <li>cors: <code>version: 2.8.5</code></li> <li>dotenv: <code>version: 16.4.5</code></li> <li>express: <code>version: 4.19.2</code></li> <li>jsonwebtoken: <code>version: 9.0.2</code></li> <li>pg: <code>version: 8.11.5</code></li> <li>sequelize: <code>version: 6.37.3</code></li> <li>validator: <code>version: 13.12.0</code></li> </ul>"},{"location":"#librerias-de-desarrollo","title":"Librerias de Desarrollo:","text":"<ul> <li>nodemon: <code>version 3.1.1</code></li> </ul>"},{"location":"#variables-de-entorno","title":"Variables de Entorno","text":"<p>Para ejecutar este proyecto, es necesario agregar las siguientes variables al archivo <code>.env</code>:</p> <p>PORT: Especifica el puerto en el que est\u00e1 corriendo el servidor.</p> <p>Ejemplo: <code>PORT=3000</code></p> <p>SECRETO: Secreto utilizado para generar el hash de las contrase\u00f1as. Es una cadena de texto que se usa para la encriptaci\u00f3n y debe mantenerse segura</p> <p>Ejemplo: <code>SECRETO=miSecretoSuperSeguro</code></p> <p>DB_USER: Usuario de la base de datos. Es el nombre de usuario que se usa para conectarse a la base de datos.</p> <p>Ejemplo: <code>DB_USER=miUsuarioBD</code></p> <p>DB_PWD: Contrase\u00f1a de la base de datos. Es la contrase\u00f1a asociada con el usuario de la base de datos.</p> <p>Ejemplo: <code>DB_PWD=miContrase\u00f1aSegura</code></p> <p>DB_HOST: Host de la base de datos. Es la direcci\u00f3n del servidor de la base de datos.</p> <p>Ejemplo: <code>DB_HOST=localhost</code></p> <p>DB_NAME: Nombre de la base de datos. Es el nombre de la base de datos a la que se conectar\u00e1 la aplicaci\u00f3n.</p> <p>Ejemplo: <code>DB_NAME=nombreDeMiBaseDeDatos</code></p>"},{"location":"#ejemplo-de-archivo-env","title":"Ejemplo de archivo <code>.env</code>","text":"<p>A continuaci\u00f3n se muestra un ejemplo de c\u00f3mo deber\u00eda verse el archivo <code>.env</code> con las variables de entorno configuradas:</p> <pre><code>PORT=3000\nSECRETO=miSecretoSuperSeguro\nDB_USER=miUsuarioBD\nDB_PWD=miContrase\u00f1aSegura\nDB_HOST=localhost\nDB_NAME=nombreDeMiBaseDeDatos\n</code></pre>"},{"location":"#consideraciones-de-seguridad","title":"Consideraciones de Seguridad","text":"<p>Nos aseguramos de agregar el archivo .env al archivo .gitignore para evitar que las credenciales y secretos sean expuestos en el repositorio de Github.</p> <pre><code>.env\n</code></pre>"},{"location":"API/errores-genericos/","title":"Errores genericos","text":""},{"location":"API/errores-genericos/#errores","title":"Errores","text":""},{"location":"API/errores-genericos/#error-400-bad-request","title":"Error 400 - Bad Request","text":"<p>Causa: Id pasado en parametros no es un entero</p> <pre><code>{ \"error\": \"El par\u00e1metro ${paramName} debe ser un entero\" }\n</code></pre> <p>Causa: Formato de fechas en parametros incorrecto</p> <pre><code>{ \"error\": \"El formato de las fechas debe ser YYYY-MM-DD\" }\n</code></pre>"},{"location":"API/errores-genericos/#error-401-unauthorized","title":"Error 401 - Unauthorized","text":"<p>Causa: Token de autorizaci\u00f3n no proporcionado.</p> <pre><code>{ \"error\": \"Token de autorizaci\u00f3n no proporcionado\" }\n</code></pre> <p>Causa: Token de autorizaci\u00f3n vencido.</p> <pre><code>{ \"error\": \"El token expir\u00f3, inicie sesi\u00f3n nuevamente\" }\n</code></pre> <p>Causa: Token inv\u00e1lido</p> <pre><code>{ \"error\": \"Token inv\u00e1lido, inicie sesi\u00f3n nuevamente\" }\n</code></pre> <p>Causa: Token de autorizaci\u00f3n requerido no es de un usuario Admin.</p> <pre><code>{ \"error\": \"Debe iniciar sesi\u00f3n como administrador.\" }\n</code></pre>"},{"location":"API/introduccion/","title":"Introduccion","text":""},{"location":"API/introduccion/#usuarios","title":"Usuarios","text":"<p>Ir a Pagina de Usuarios para mas detalles.</p> M\u00e9todo Descripci\u00f3n Tipo de Token <code>GET</code> /api/usuarios Obtener Usuarios Admin <code>GET</code> /api/usuarios/:id Obtener Usuario Admin <code>GET</code> /api/usuarios/inactivos Obtener Usuarios inactivos Admin <code>POST</code> /api/usuarios Nuevo Usuario Sin Token <code>POST</code> /api/usuarios/login Login Usuario Sin Token <code>POST</code> /api/usuarios/confirmar Confirmar Usuario Admin <code>PUT</code> /api/usuarios/:id Modificar Usuario Admin <code>DELETE</code> /api/usuarios/:id Borrar Usuario Admin"},{"location":"API/introduccion/#empleados","title":"Empleados","text":"<p>Ir a Pagina de Empleados para mas detalles.</p> M\u00e9todo Descripci\u00f3n Tipo de Token <code>GET</code> /api/empleados Obtener Empleados Normal <code>GET</code> /api/empleados/:id Obtener Empleado Normal <code>POST</code> /api/empleados Nuevo Empleado Normal <code>PATCH</code> /api/empleados/:id/estado/ Modificar Estado del Empleado Admin <code>DELETE</code> /api/empleados/:id Borrar Empleado Admin"},{"location":"API/introduccion/#camiones","title":"Camiones","text":"<p>Ir a Pagina de Camiones para mas detalles.</p> M\u00e9todo Descripci\u00f3n Tipo de Token <code>GET</code> /api/camiones Obtener Camiones Normal <code>GET</code> /api/camiones/:id Obtener Camion Normal <code>POST</code> /api/camiones Nuevo Camion Normal <code>PUT</code> /api/camiones/:id Modificar Camion Normal <code>DELETE</code> /api/camiones/:id Borrar Camion Admin"},{"location":"API/introduccion/#jornales","title":"Jornales","text":"<p>Ir a Pagina de Jornales para mas detalles.</p> M\u00e9todo Descripci\u00f3n Tipo de Token <code>POST</code> /api/jornales Nuevo jornal Normal <code>GET</code> /api/jornales/:jornalId Obtener jornal Normal <code>GET</code> /api/jornales/todos/:inicio/:fin Obtener jornales de todos los empleados entre 2 fechas Normal <code>GET</code> /api/jornales/:empleadoId/:inicio/:fin Obtener jornales de un empleado entre 2 fechas Normal <code>GET</code> /api/jornales/horas/:empleadoId/:inicio/:fin Obtener horas trabajadas de un empleado entre 2 fechas Normal <code>PUT</code> /api/jornales/:jornalId/ Modificar jornal Admin <code>DELETE</code> /api/jornales/:jornalIdid Borrar jornal Admin"},{"location":"API/introduccion/#servicios-del-camion","title":"Servicios del Camion","text":"<p>Ir a Pagina de Servicios para mas detalles.</p> M\u00e9todo Descripci\u00f3n Tipo de Token <code>POST</code> /api/servicios Nuevo servicio Normal <code>GET</code> /api/servicios/:camionId Obtener todos los servicios de un camion Normal <code>GET</code> /api/servicios/ Obtener todos los servicios Normal"},{"location":"API/introduccion/#historico-del-uso-del-camion","title":"Historico del uso del Camion","text":"<p>Ir a Pagina de Historico de usos del camion para mas detalles.</p> M\u00e9todo Descripci\u00f3n Tipo de Token <code>POST</code> /api/historico-camion Registro de una nueva asignacion de camion Normal <code>GET</code> /api/historico-camion/ Obtener Asignaciones Actuales de los camiones Normal <code>GET</code> /api/historico-camion?empleadoId=id Obtener el historico de asignaciones de los camiones por empleado Normal <code>GET</code> /api/historico-camion?camionId=id Obtener el historico de asignaciones de los camiones por camion Normal"},{"location":"API/camiones/borrar-camion/","title":"Borrar camion","text":"<pre><code>DELETE /api/camiones/:camionId\n</code></pre>"},{"location":"API/camiones/borrar-camion/#parametros-y-headers-de-la-solicitud","title":"Par\u00e1metros y Headers de la Solicitud","text":"<p>La solicitud debe ser de tipo JSON y debe incluir los siguientes campos en el body :</p> <ul> <li><code>camionId</code> (integer, required): El ID del cami\u00f3n a borrar.</li> </ul> <p>Se debera incluir Authorization header con jwt creado con el usuario(Admin) en el metodo <code>POST /usuarios/login</code></p>"},{"location":"API/camiones/borrar-camion/#ejemplo-de-solicitud","title":"Ejemplo de Solicitud","text":"<pre><code>DELETE /api/camiones/1\n</code></pre>"},{"location":"API/camiones/borrar-camion/#respuestas","title":"Respuestas","text":""},{"location":"API/camiones/borrar-camion/#exito","title":"\u00c9xito","text":"<p>C\u00f3digo: 200 OK</p> <pre><code>{\n  \"message\": \"Cami\u00f3n borrado exitosamente\"\n}\n</code></pre>"},{"location":"API/camiones/borrar-camion/#errores","title":"Errores","text":""},{"location":"API/camiones/borrar-camion/#error-400-bad-request","title":"Error 400 - Bad Request","text":"<p>Causa: Id pasado en parametros no es un entero</p> <pre><code>{ \"error\": \"El par\u00e1metro ${paramName} debe ser un entero\" }\n</code></pre>"},{"location":"API/camiones/borrar-camion/#error-401-unauthorized","title":"Error 401 - Unauthorized","text":"<p>Causa: Token de autorizaci\u00f3n no proporcionado.</p> <pre><code>{ \"error\": \"Token de autorizaci\u00f3n no proporcionado\" }\n</code></pre> <p>Causa: Token de autorizaci\u00f3n vencido.</p> <pre><code>{ \"error\": \"El token expir\u00f3, inicie sesi\u00f3n nuevamente\" }\n</code></pre> <p>Causa: Token inv\u00e1lido</p> <pre><code>{ \"error\": \"Token inv\u00e1lido, inicie sesi\u00f3n nuevamente\" }\n</code></pre> <p>Causa: Token de autorizaci\u00f3n requerido no es de un usuario Admin.</p> <pre><code>{ \"error\": \"Debe iniciar sesi\u00f3n como administrador.\" }\n</code></pre>"},{"location":"API/camiones/borrar-camion/#error-404-not-found","title":"Error 404 - Not Found","text":"<p>Causa: Cami\u00f3n no encontrado.</p> <pre><code>{ \"error\": \"Cami\u00f3n no encontrado.\" }\n</code></pre>"},{"location":"API/camiones/borrar-camion/#error-500-internal-server-error","title":"Error 500 - Internal Server Error","text":"<p>Causa: Error al actualizar el camion.</p> <pre><code>{\n  \"error\": \"Error al actualizar el camion\",\n  \"detalle\": [\"Detalle del error de Sequelize\"]\n}\n</code></pre>"},{"location":"API/camiones/introduccion/","title":"Introduccion","text":""},{"location":"API/camiones/introduccion/#endpoint-apicamiones","title":"Endpoint <code>/api/camiones</code>","text":"<p>El endpoint de camiones ofrece funcionalidades para gestionar la informaci\u00f3n de los camiones de la empresa. Permite agregar nuevos camiones, editar la informaci\u00f3n de camiones existentes, eliminar camiones y obtener detalles de un cami\u00f3n espec\u00edfico.</p>"},{"location":"API/camiones/introduccion/#metodos-http","title":"M\u00e9todos HTTP","text":"M\u00e9todo Descripci\u00f3n Tipo de Token <code>GET</code> /api/camiones Obtener Camiones Normal <code>GET</code> /api/camiones/:id Obtener Camion Normal <code>POST</code> /api/camiones Nuevo Camion Normal <code>PUT</code> /api/camiones/:id Modificar Camion Normal <code>DELETE</code> /api/camiones/:id Borrar Camion Admin"},{"location":"API/camiones/modificar-camion/","title":"Modificar camion","text":"<pre><code>PUT /api/camiones/:camionId\n</code></pre>"},{"location":"API/camiones/modificar-camion/#parametros-y-headers-de-la-solicitud","title":"Par\u00e1metros y Headers de la Solicitud","text":"<p>La solicitud debe ser de tipo JSON y debe incluir los siguientes campos en el body (todos opcionales):</p> <ul> <li><code>matricula</code> (string): La matr\u00edcula del cami\u00f3n.</li> <li><code>modelo</code> (string): El modelo del cami\u00f3n.</li> <li><code>anio</code> (number): El a\u00f1o del cami\u00f3n.</li> <li><code>estado</code> (string): El estado del cami\u00f3n.</li> </ul> <p>Se debera incluir Authorization header con jwt creado con el usuario en el metodo <code>POST /usuarios/login</code></p>"},{"location":"API/camiones/modificar-camion/#ejemplo-de-solicitud","title":"Ejemplo de Solicitud","text":"<pre><code>{\n  \"matricula\": \"ABC123\",\n  \"modelo\": \"Scania\",\n  \"anio\": 2021,\n  \"estado\": \"Inactivo\"\n}\n</code></pre>"},{"location":"API/camiones/modificar-camion/#respuestas","title":"Respuestas","text":""},{"location":"API/camiones/modificar-camion/#exito","title":"\u00c9xito","text":"<p>C\u00f3digo: 200 OK</p> <pre><code>{\n  \"matricula\": \"ABC123\",\n  \"modelo\": \"Scania\",\n  \"anio\": 2021,\n  \"estado\": \"Inactivo\"\n}\n</code></pre>"},{"location":"API/camiones/modificar-camion/#error-400-bad-request","title":"Error 400 - Bad Request","text":"<p>Causa: Id pasado en parametros no es un entero</p> <pre><code>{ \"error\": \"El par\u00e1metro ${paramName} debe ser un entero\" }\n</code></pre>"},{"location":"API/camiones/modificar-camion/#error-401-unauthorized","title":"Error 401 - Unauthorized","text":"<p>Causa: Token de autorizaci\u00f3n no proporcionado.</p> <pre><code>{ \"error\": \"Token de autorizaci\u00f3n no proporcionado\" }\n</code></pre> <p>Causa: Token de autorizaci\u00f3n vencido.</p> <pre><code>{ \"error\": \"El token expir\u00f3, inicie sesi\u00f3n nuevamente\" }\n</code></pre> <p>Causa: Token inv\u00e1lido</p> <pre><code>{ \"error\": \"Token inv\u00e1lido, inicie sesi\u00f3n nuevamente\" }\n</code></pre>"},{"location":"API/camiones/modificar-camion/#error-404-not-found","title":"Error 404 - Not Found","text":"<p>Causa: Cami\u00f3n no encontrado.</p> <pre><code>{ \"error\": \"Cami\u00f3n no encontrado.\" }\n</code></pre>"},{"location":"API/camiones/modificar-camion/#error-500-internal-server-error","title":"Error 500 - Internal Server Error","text":"<p>Causa: Error al actualizar el camion.</p> <pre><code>{\n  \"error\": \"Error al actualizar el camion\",\n  \"detalle\": [\"Detalle del error de Sequelize\"]\n}\n</code></pre>"},{"location":"API/camiones/nuevo-camion/","title":"Nuevo camion","text":"<pre><code>POST /api/camiones\n</code></pre>"},{"location":"API/camiones/nuevo-camion/#parametros-y-headers-de-la-solicitud","title":"Par\u00e1metros y Headers de la Solicitud","text":"<p>La solicitud debe ser de tipo JSON y debe incluir los siguientes campos en el body:</p> <ul> <li><code>matricula</code> (string): La matr\u00edcula del cami\u00f3n.</li> <li><code>modelo</code> (string): El modelo del cami\u00f3n.</li> <li><code>anio</code> (number): El a\u00f1o de fabricaci\u00f3n del cami\u00f3n.</li> <li><code>estado</code> (string): El estado actual del cami\u00f3n.</li> </ul> <p>Se debera incluir Authorization header con jwt creado con el usuario en el metodo <code>POST /usuarios/login</code></p>"},{"location":"API/camiones/nuevo-camion/#ejemplo-de-solicitud","title":"Ejemplo de Solicitud","text":"<pre><code>{\n  \"matricula\": \"ABC123\",\n  \"modelo\": \"Modelo XYZ\",\n  \"anio\": 2020,\n  \"estado\": \"Disponible\"\n}\n</code></pre>"},{"location":"API/camiones/nuevo-camion/#respuestas","title":"Respuestas","text":""},{"location":"API/camiones/nuevo-camion/#exito","title":"\u00c9xito","text":"<p>C\u00f3digo: 201 Created</p> <pre><code>{\n  \"id\": 1,\n  \"matricula\": \"ABC123\",\n  \"modelo\": \"Modelo XYZ\",\n  \"anio\": 2020,\n  \"estado\": \"Disponible\",\n  \"createdAt\": \"2024-06-01T00:00:00.000Z\",\n  \"updatedAt\": \"2024-06-01T00:00:00.000Z\"\n}\n</code></pre>"},{"location":"API/camiones/nuevo-camion/#errores","title":"Errores","text":""},{"location":"API/camiones/nuevo-camion/#error-400-bad-request","title":"Error 400 - Bad Request","text":"<p>Causa: No tiene matricula o modelo</p> <pre><code>{ \"error\": \"No tiene matricula o modelo\" }\n</code></pre>"},{"location":"API/camiones/nuevo-camion/#error-401-unauthorized","title":"Error 401 - Unauthorized","text":"<p>Causa: Token de autorizaci\u00f3n no proporcionado.</p> <pre><code>{ \"error\": \"Token de autorizaci\u00f3n no proporcionado\" }\n</code></pre> <p>Causa: Token de autorizaci\u00f3n vencido.</p> <pre><code>{ \"error\": \"El token expir\u00f3, inicie sesi\u00f3n nuevamente\" }\n</code></pre> <p>Causa: Token inv\u00e1lido</p> <pre><code>{ \"error\": \"Token inv\u00e1lido, inicie sesi\u00f3n nuevamente\" }\n</code></pre>"},{"location":"API/camiones/nuevo-camion/#error-500-internal-server-error","title":"Error 500 - Internal Server Error","text":"<p>Causa: Error al crear el camion.</p> <pre><code>{\n  \"error\": \"Error al crear camion\",\n  \"detalle\": [\"Detalle del error de Sequelize\"]\n}\n</code></pre>"},{"location":"API/camiones/obtener-camion/","title":"Obtener camion","text":"<pre><code>GET /api/camiones/:camionId\n</code></pre>"},{"location":"API/camiones/obtener-camion/#parametros-y-headers-de-la-solicitud","title":"Par\u00e1metros y Headers de la Solicitud","text":"<ul> <li><code>camionId</code> (number): El ID del cami\u00f3n a obtener. Debe ser proporcionado en la URL.</li> </ul> <p>Se debera incluir Authorization header con jwt creado con el usuario en el metodo <code>POST /usuarios/login</code></p>"},{"location":"API/camiones/obtener-camion/#respuestas","title":"Respuestas","text":""},{"location":"API/camiones/obtener-camion/#exito","title":"\u00c9xito","text":"<p>C\u00f3digo: 200 OK</p> <pre><code>{\n  \"id\": 1,\n  \"matricula\": \"ABC123\",\n  \"modelo\": \"Modelo XYZ\",\n  \"anio\": 2020,\n  \"estado\": \"Disponible\"\n}\n</code></pre>"},{"location":"API/camiones/obtener-camion/#errores","title":"Errores","text":""},{"location":"API/camiones/obtener-camion/#error-400-bad-request","title":"Error 400 - Bad Request","text":"<p>Causa: Id pasado en parametros no es un entero</p> <pre><code>{ \"error\": \"El par\u00e1metro ${paramName} debe ser un entero\" }\n</code></pre>"},{"location":"API/camiones/obtener-camion/#error-401-unauthorized","title":"Error 401 - Unauthorized","text":"<p>Causa: Token de autorizaci\u00f3n no proporcionado.</p> <pre><code>{ \"error\": \"Token de autorizaci\u00f3n no proporcionado\" }\n</code></pre> <p>Causa: Token de autorizaci\u00f3n vencido.</p> <pre><code>{ \"error\": \"El token expir\u00f3, inicie sesi\u00f3n nuevamente\" }\n</code></pre> <p>Causa: Token inv\u00e1lido</p> <pre><code>{ \"error\": \"Token inv\u00e1lido, inicie sesi\u00f3n nuevamente\" }\n</code></pre>"},{"location":"API/camiones/obtener-camion/#error-404-not-found","title":"Error 404 - Not Found","text":"<p>Causa: Camion no encontrado.</p> <pre><code>{\n  \"error\": \"Camion no encontrado\"\n}\n</code></pre>"},{"location":"API/camiones/obtener-camion/#error-500-internal-server-error","title":"Error 500 - Internal Server Error","text":"<p>Causa: Error al crear el empleado.</p> <pre><code>{\n  \"error\": \"Error al obtener el camion\",\n  \"detalle\": [\"Detalle del error de Sequelize\"]\n}\n</code></pre>"},{"location":"API/camiones/obtener-camiones/","title":"Obtener camiones","text":"<pre><code>GET /api/camiones\n</code></pre>"},{"location":"API/camiones/obtener-camiones/#parametros-y-headers-de-la-solicitud","title":"Par\u00e1metros y Headers de la Solicitud","text":"<p>Sin Par\u00e1metros.</p> <p>Se debera incluir Authorization header con jwt creado con el usuario en el metodo <code>POST /usuarios/login</code></p>"},{"location":"API/camiones/obtener-camiones/#respuestas","title":"Respuestas","text":""},{"location":"API/camiones/obtener-camiones/#exito","title":"\u00c9xito","text":"<p>C\u00f3digo: 200 OK</p> <pre><code>[{\n  \"id\": 1,\n  \"matricula\": \"ABC123\",\n  \"modelo\": \"Modelo XYZ\",\n  \"anio\": 2020,\n  \"estado\": \"Disponible\",\n  \"createdAt\": \"2024-06-01T00:00:00.000Z\",\n  \"updatedAt\": \"2024-06-01T00:00:00.000Z\"\n},\n{...}\n]\n</code></pre>"},{"location":"API/camiones/obtener-camiones/#errores","title":"Errores","text":""},{"location":"API/camiones/obtener-camiones/#error-401-unauthorized","title":"Error 401 - Unauthorized","text":"<p>Causa: Token de autorizaci\u00f3n no proporcionado.</p> <pre><code>{ \"error\": \"Token de autorizaci\u00f3n no proporcionado\" }\n</code></pre> <p>Causa: Token de autorizaci\u00f3n vencido.</p> <pre><code>{ \"error\": \"El token expir\u00f3, inicie sesi\u00f3n nuevamente\" }\n</code></pre> <p>Causa: Token inv\u00e1lido</p> <pre><code>{ \"error\": \"Token inv\u00e1lido, inicie sesi\u00f3n nuevamente\" }\n</code></pre>"},{"location":"API/camiones/obtener-camiones/#error-500-internal-server-error","title":"Error 500 - Internal Server Error","text":"<p>Causa: Error al crear el empleado.</p> <pre><code>{\n  \"error\": \"Error al crear camion\",\n  \"detalle\": [\"Detalle del error de Sequelize\"]\n}\n</code></pre>"},{"location":"API/empleados/eliminar-empleado/","title":"Eliminar empleado","text":"<pre><code>DELETE /api/empleados/:empleadoId\n</code></pre>"},{"location":"API/empleados/eliminar-empleado/#descripcion","title":"Descripci\u00f3n","text":"<p>Elimina un empleado espec\u00edfico si no tiene un usuario vinculado.</p>"},{"location":"API/empleados/eliminar-empleado/#parametros-y-headers-de-la-solicitud","title":"Par\u00e1metros y Headers de la Solicitud","text":"<ul> <li><code>empleadoId</code> (number): El ID del empleado a eliminar. Debe ser proporcionado en la URL.</li> </ul> <p>Se debera incluir Authorization header con jwt creado con el usuario tipo Admin en el metodo <code>POST /usuarios/login</code></p>"},{"location":"API/empleados/eliminar-empleado/#respuestas","title":"Respuestas","text":""},{"location":"API/empleados/eliminar-empleado/#exito","title":"\u00c9xito","text":"<p>C\u00f3digo: 200 OK</p> <pre><code>```json\n{\n  \"detalle\": \"Empleado eliminado exitosamente\"\n}\n```\n</code></pre>"},{"location":"API/empleados/eliminar-empleado/#errores","title":"Errores","text":""},{"location":"API/empleados/eliminar-empleado/#error-400-bad-request","title":"Error 400 - Bad Request","text":"<p>Causa: Id en par\u00e1metros no es un entero.</p> <pre><code>```json\n{ \"error\": \"El ID del empleado debe ser un entero\" }\n```\n</code></pre> <p>Causa: El empleado tiene un usuario vinculado.</p> <pre><code>{\n  \"error\": \"No se puede eliminar el empleado porque tiene un usuario vinculado\"\n}\n</code></pre> <p>Causa: Id pasado en parametros no es un entero</p> <pre><code>{ \"error\": \"El par\u00e1metro ${paramName} debe ser un entero\" }\n</code></pre>"},{"location":"API/empleados/eliminar-empleado/#error-401-unauthorized","title":"Error 401 - Unauthorized","text":"<p>Causa: Token de autorizaci\u00f3n no proporcionado.</p> <pre><code>{ \"error\": \"Token de autorizaci\u00f3n no proporcionado\" }\n</code></pre> <p>Causa: Token de autorizaci\u00f3n vencido.</p> <pre><code>{ \"error\": \"El token expir\u00f3, inicie sesi\u00f3n nuevamente\" }\n</code></pre> <p>Causa: Token inv\u00e1lido</p> <pre><code>{ \"error\": \"Token inv\u00e1lido, inicie sesi\u00f3n nuevamente\" }\n</code></pre> <p>Causa: Token de autorizaci\u00f3n requerido no es de un usuario Admin.</p> <pre><code>{ \"error\": \"Debe iniciar sesi\u00f3n como administrador.\" }\n</code></pre>"},{"location":"API/empleados/eliminar-empleado/#error-404-not-found","title":"Error 404 - Not Found","text":"<p>Causa: Empleado no encontrado.</p> <pre><code>{\n  \"error\": \"Empleado no encontrado\"\n}\n</code></pre>"},{"location":"API/empleados/eliminar-empleado/#error-500-internal-server-error","title":"Error 500 - Internal Server Error","text":"<p>Causa: Error al eliminar el empleado.</p> <pre><code>{\n  \"error\": \"Error al eliminar empleado\",\n  \"detalle\": [\"Detalle del error de Sequelize\"]\n}\n</code></pre>"},{"location":"API/empleados/estado-empleado/","title":"Estado empleado","text":"<pre><code>PATCH /api/empleados/:empleadoId/estado\n</code></pre>"},{"location":"API/empleados/estado-empleado/#descripcion","title":"Descripci\u00f3n","text":"<p>Modifica el estado (habilitado/deshabilitado) de un empleado.</p>"},{"location":"API/empleados/estado-empleado/#parametros-y-headers-de-la-solicitud","title":"Par\u00e1metros y Headers de la Solicitud","text":"<ul> <li><code>empleadoId</code> (number): El ID del empleado cuyo estado ser\u00e1 cambiado. Debe ser proporcionado en la URL.</li> </ul> <p>Se debera incluir Authorization header con jwt creado con el usuario tipo Admin en el metodo <code>POST /usuarios/login</code></p>"},{"location":"API/empleados/estado-empleado/#respuestas","title":"Respuestas","text":""},{"location":"API/empleados/estado-empleado/#exito","title":"\u00c9xito","text":"<p>C\u00f3digo: 202 Accepted</p> <pre><code>{\n  \"detalle\": \"Empleado {nombre} con CI: {cedula} fue {habilitado/deshabilitado} exitosamente\"\n}\n</code></pre>"},{"location":"API/empleados/estado-empleado/#errores","title":"Errores","text":""},{"location":"API/empleados/estado-empleado/#error-400-bad-request","title":"Error 400 - Bad Request","text":"<p>Causa: Id en par\u00e1metros no es un entero.</p> <pre><code>{ \"error\": \"El ID del empleado debe ser un entero\" }\n</code></pre>"},{"location":"API/empleados/estado-empleado/#error-401-unauthorized","title":"Error 401 - Unauthorized","text":"<p>Causa: Token de autorizaci\u00f3n no proporcionado.</p> <pre><code>{ \"error\": \"Token de autorizaci\u00f3n no proporcionado\" }\n</code></pre> <p>Causa: Token de autorizaci\u00f3n vencido.</p> <pre><code>{ \"error\": \"El token expir\u00f3, inicie sesi\u00f3n nuevamente\" }\n</code></pre> <p>Causa: Token inv\u00e1lido</p> <pre><code>{ \"error\": \"Token inv\u00e1lido, inicie sesi\u00f3n nuevamente\" }\n</code></pre> <p>Causa: Token de autorizaci\u00f3n requerido no es de un usuario Admin.</p> <pre><code>{ \"error\": \"Debe iniciar sesi\u00f3n como administrador.\" }\n</code></pre>"},{"location":"API/empleados/estado-empleado/#error-404-not-found","title":"Error 404 - Not Found","text":"<p>Causa: El empleado con el ID especificado no fue encontrado.</p> <pre><code>{\n  \"error\": \"Empleado no existe\"\n}\n</code></pre>"},{"location":"API/empleados/estado-empleado/#error-500-internal-server-error","title":"Error 500 - Internal Server Error","text":"<p>Causa: Error al obtener los empleados.</p> <pre><code>{\n  \"error\": \"Error al habilitar/deshabilitar al empleado\",\n  \"detalle\": [\"Detalle del error de Sequelize\"]\n}\n</code></pre>"},{"location":"API/empleados/introduccion/","title":"Introduccion","text":""},{"location":"API/empleados/introduccion/#endpoint-apiempleados","title":"Endpoint <code>/api/empleados</code>","text":"<p>El endpoint de empleados proporciona funcionalidades para gestionar la informaci\u00f3n de los empleados de la empresa. Permite agregar nuevos empleados, editar la informaci\u00f3n de empleados existentes, eliminar empleados y obtener detalles de un empleado espec\u00edfico.</p>"},{"location":"API/empleados/introduccion/#empleados","title":"Empleados","text":"M\u00e9todo Descripci\u00f3n Tipo de Token <code>GET</code> /api/empleados Obtener Empleados Normal <code>GET</code> /api/empleados/:id Obtener Empleado Normal <code>POST</code> /api/empleados Nuevo Empleado Normal <code>PATCH</code> /api/empleados/:id/estado/ Modificar Estado del Empleado Admin <code>DELETE</code> /api/empleados/:id Borrar Empleado Admin"},{"location":"API/empleados/obtener-empleado/","title":"Obtener empleado","text":"<pre><code>GET /api/empleados/:id\n</code></pre>"},{"location":"API/empleados/obtener-empleado/#parametros-y-headers-de-la-solicitud","title":"Par\u00e1metros y Headers de la Solicitud","text":"<ul> <li>empleadoId (integer): El ID del empleado. Debe ser proporcionado en la URL como parametro en la url.</li> </ul> <p>Se debera incluir Authorization header con jwt creado con el usuario en el metodo <code>POST /usuarios/login</code></p>"},{"location":"API/empleados/obtener-empleado/#respuestas","title":"Respuestas","text":""},{"location":"API/empleados/obtener-empleado/#exito","title":"\u00c9xito","text":"<p>C\u00f3digo: 200 OK</p> <pre><code>{\n  \"id\": 1,\n  \"nombre\": \"Juan Perez\",\n  \"rol\": \"chofer\",\n  \"cedula\": 12345678,\n  \"habilitado\": true,\n  \"createdAt\": \"2024-06-07T22:31:06.148Z\",\n  \"updatedAt\": \"2024-06-07T22:31:06.148Z\",\n  \"TelefonoPropietarios\": [\n    {\n      \"telefonoId\": 1,\n      \"Telefonos\": {\n        \"telefono\": \"24127332\",\n        \"tipo\": \"telefono\"\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"API/empleados/obtener-empleado/#errores","title":"Errores","text":""},{"location":"API/empleados/obtener-empleado/#error-400-bad-request","title":"Error 400 - Bad Request","text":"<p>Causa: Id pasado en parametros no es un entero</p> <pre><code>{ \"error\": \"El par\u00e1metro ${paramName} debe ser un entero\" }\n</code></pre>"},{"location":"API/empleados/obtener-empleado/#error-401-unauthorized","title":"Error 401 - Unauthorized","text":"<p>Causa: Token de autorizaci\u00f3n no proporcionado.</p> <pre><code>{ \"error\": \"Token de autorizaci\u00f3n no proporcionado\" }\n</code></pre> <p>Causa: Token de autorizaci\u00f3n vencido.</p> <pre><code>{ \"error\": \"El token expir\u00f3, inicie sesi\u00f3n nuevamente\" }\n</code></pre> <p>Causa: Token inv\u00e1lido</p> <pre><code>{ \"error\": \"Token inv\u00e1lido, inicie sesi\u00f3n nuevamente\" }\n</code></pre>"},{"location":"API/empleados/obtener-empleado/#error-404-not-found","title":"Error 404 - Not Found","text":"<p>Causa: Empleado no encontrado.</p> <pre><code>{ \"error\": \"Empleado no encontrado\" }\n</code></pre>"},{"location":"API/empleados/obtener-empleado/#error-500-internal-server-error","title":"Error 500 - Internal Server Error","text":"<p>Causa: Error al obtener el empleado.</p> <pre><code>{\n  \"error\": \"Error al obtener el empleado\",\n  \"detalle\": [\"Detalle del error de Sequelize\"]\n}\n</code></pre>"},{"location":"API/empleados/obtener-empleados/","title":"Obtener empleados","text":"<pre><code>GET /api/empleados\n</code></pre>"},{"location":"API/empleados/obtener-empleados/#descripcion","title":"Descripci\u00f3n","text":"<p>Obtiene una lista de todos los empleados, incluyendo sus tel\u00e9fonos asociados.</p>"},{"location":"API/empleados/obtener-empleados/#parametros-y-headers-de-la-solicitud","title":"Par\u00e1metros y Headers de la Solicitud","text":"<p>Sin Par\u00e1metros.</p> <p>Se debera incluir Authorization header con jwt creado con el usuario en el metodo <code>POST /usuarios/login</code></p>"},{"location":"API/empleados/obtener-empleados/#respuestas","title":"Respuestas","text":""},{"location":"API/empleados/obtener-empleados/#exito","title":"\u00c9xito","text":"<p>C\u00f3digo: 200 OK</p> <pre><code>[\n  {\n    \"id\": 1,\n    \"nombre\": \"Juan Perez\",\n    \"rol\": \"chofer\",\n    \"cedula\": 12345678,\n    \"habilitado\": true,\n    \"createdAt\": \"2024-06-07T22:31:06.148Z\",\n    \"updatedAt\": \"2024-06-07T22:31:06.148Z\",\n    \"TelefonoPropietarios\": [\n      {\n        \"telefonoId\": 1,\n        \"Telefonos\": {\n          \"telefono\": \"24127332\",\n          \"tipo\": \"telefono\"\n        }\n      }\n    ]\n  }\n]\n</code></pre>"},{"location":"API/empleados/obtener-empleados/#errores","title":"Errores","text":""},{"location":"API/empleados/obtener-empleados/#error-401-unauthorized","title":"Error 401 - Unauthorized","text":"<p>Causa: Token de autorizaci\u00f3n no proporcionado.</p> <pre><code>{ \"error\": \"Token de autorizaci\u00f3n no proporcionado\" }\n</code></pre> <p>Causa: Token de autorizaci\u00f3n vencido.</p> <pre><code>{ \"error\": \"El token expir\u00f3, inicie sesi\u00f3n nuevamente\" }\n</code></pre> <p>Causa: Token inv\u00e1lido</p> <pre><code>{ \"error\": \"Token inv\u00e1lido, inicie sesi\u00f3n nuevamente\" }\n</code></pre> <p>Causa: Token de autorizaci\u00f3n requerido no es de un usuario Admin.</p> <pre><code>{ \"error\": \"Debe iniciar sesi\u00f3n como administrador.\" }\n</code></pre>"},{"location":"API/empleados/obtener-empleados/#error-500-internal-server-error","title":"Error 500 - Internal Server Error","text":"<p>Causa: Error al obtener los empleados.</p> <pre><code>{\n  \"error\": \"Error al obtener los empleados\",\n  \"detalle\": [\"Detalle del error de Sequelize\"]\n}\n</code></pre>"},{"location":"API/empleados/registrar-empleado/","title":"Registrar empleado","text":"<pre><code>POST /api/empleados\n</code></pre>"},{"location":"API/empleados/registrar-empleado/#parametros-y-headers-de-la-solicitud","title":"Par\u00e1metros y Headers de la Solicitud","text":"<p>La solicitud debe ser de tipo JSON y debe incluir los siguientes campos en el body:</p> <ul> <li><code>nombre</code> (string): El nombre del empleado.</li> <li><code>cedula</code> (string): La c\u00e9dula del empleado (debe tener 8 d\u00edgitos).</li> <li><code>rol</code> (string): El rol del empleado. Puede ser \"admin\", \"normal\" o \"chofer\".</li> </ul> <p>Se debera incluir Authorization header con jwt creado con el usuario en el metodo <code>POST /usuarios/login</code></p>"},{"location":"API/empleados/registrar-empleado/#ejemplo-de-solicitud","title":"Ejemplo de Solicitud","text":"<pre><code>{\n  \"nombre\": \"Juan Perez\",\n  \"cedula\": \"12345678\",\n  \"rol\": \"admin\"\n}\n</code></pre>"},{"location":"API/empleados/registrar-empleado/#respuestas","title":"Respuestas","text":""},{"location":"API/empleados/registrar-empleado/#exito","title":"\u00c9xito","text":"<p>C\u00f3digo: 201 Created</p> <pre><code>{\n  \"id\": 1,\n  \"nombre\": \"Juan Perez\",\n  \"cedula\": \"12345678\",\n  \"rol\": \"admin\",\n  \"habilitado\": \"true\",\n  \"createdAt\": \"2024-06-01T00:00:00.000Z\",\n  \"updatedAt\": \"2024-06-01T00:00:00.000Z\"\n}\n</code></pre>"},{"location":"API/empleados/registrar-empleado/#errores","title":"Errores","text":""},{"location":"API/empleados/registrar-empleado/#error-400-bad-request","title":"Error 400 - Bad Request","text":"<p>Causa: La c\u00e9dula no tiene 8 d\u00edgitos.</p> <pre><code>{ \"error\": \"Cedula invalida, deben ser 8 numeros\" }\n</code></pre> <p>Causa: Rol no es ni \"admin\", ni \"normal\", ni \"chofer\".</p> <pre><code>{ \"error\": \"Rol invalido\" }\n</code></pre>"},{"location":"API/empleados/registrar-empleado/#error-401-unauthorized","title":"Error 401 - Unauthorized","text":"<p>Causa: Token de autorizaci\u00f3n no proporcionado.</p> <pre><code>{ \"error\": \"Token de autorizaci\u00f3n no proporcionado\" }\n</code></pre> <p>Causa: Token de autorizaci\u00f3n vencido.</p> <pre><code>{ \"error\": \"El token expir\u00f3, inicie sesi\u00f3n nuevamente\" }\n</code></pre> <p>Causa: Token inv\u00e1lido</p> <pre><code>{ \"error\": \"Token inv\u00e1lido, inicie sesi\u00f3n nuevamente\" }\n</code></pre>"},{"location":"API/empleados/registrar-empleado/#error-500-internal-server-error","title":"Error 500 - Internal Server Error","text":"<p>Causa: Error al crear el empleado.</p> <pre><code>{\n  \"error\": \"Error al crear empleado\",\n  \"detalle\": [\"Detalle del error de Sequelize\"]\n}\n</code></pre>"},{"location":"API/historico-uso-camion/introduccion/","title":"Introduccion","text":""},{"location":"API/historico-uso-camion/introduccion/#endpoint-apihistorico-camion","title":"Endpoint <code>/api/historico-camion</code>","text":"<p>Esta API permite la gesti\u00f3n de los usos del camion en un sistema. Incluye la creaci\u00f3n de nuevos registros para el uso, obtenci\u00f3n de registros por periodos y de la lista de empleados/camiones.</p>"},{"location":"API/historico-uso-camion/introduccion/#metodos-http","title":"Metodos HTTP","text":"M\u00e9todo Descripci\u00f3n Tipo de Token <code>POST</code> /api/historico-camion Registro de una nueva asignacion de camion Normal <code>GET</code> /api/historico-camion/ Obtener Asignaciones Actuales de los camiones Normal <code>GET</code> /api/historico-camion?empleadoId=id Obtener el historico de asignaciones de los camiones por empleado Normal <code>GET</code> /api/historico-camion?camionId=id Obtener el historico de asignaciones de los camiones por camion Normal"},{"location":"API/jornales/introduccion/","title":"Introduccion","text":""},{"location":"API/jornales/introduccion/#endpoint-apijornales","title":"Endpoint <code>/api/jornales</code>","text":"<p>La API proporciona endpoints para gestionar jornales de empleados. Permite crear, editar, eliminar y obtener jornales individuales o por periodo. Tambi\u00e9n proporciona endpoints para obtener las horas trabajadas por empleado en un periodo espec\u00edfico. La autenticaci\u00f3n se realiza mediante tokens JWT.</p>"},{"location":"API/jornales/introduccion/#jornales","title":"Jornales","text":"M\u00e9todo Descripci\u00f3n Tipo de Token <code>POST</code> /api/jornales Nuevo jornal Normal <code>GET</code> /api/jornales/:jornalId Obtener jornal Normal <code>GET</code> /api/jornales/todos/:inicio/:fin Obtener jornales de todos los empleados entre 2 fechas Normal <code>GET</code> /api/jornales/:empleadoId/:inicio/:fin Obtener jornales de un empleado entre 2 fechas Normal <code>GET</code> /api/jornales/horas/:empleadoId/:inicio/:fin Obtener horas trabajadas de un empleado entre 2 fechas Normal <code>PUT</code> /api/jornales/:jornalId/ Modificar jornal Admin <code>DELETE</code> /api/jornales/:jornalIdid Borrar jornal Admin"},{"location":"API/servicios-camion/introduccion/","title":"Introduccion","text":""},{"location":"API/servicios-camion/introduccion/#endpoint-apiservicios","title":"Endpoint <code>/api/servicios</code>","text":"<p>Esta API permite la gesti\u00f3n de los servicios de los camiones en un sistema. Incluye la creaci\u00f3n de nuevos servicios, obtenci\u00f3n de servicios.</p>"},{"location":"API/servicios-camion/introduccion/#servicios","title":"Servicios","text":"M\u00e9todo Descripci\u00f3n Tipo de Token <code>POST</code> /api/servicios Nuevo servicio Normal <code>GET</code> /api/servicios/:camionId Obtener todos los servicios de un camion Normal <code>GET</code> /api/servicios/ Obtener todos los servicios Normal"},{"location":"API/usuarios/borrar-usuario/","title":"Borrar usuario","text":"<pre><code>DELETE /api/usuarios/id\n</code></pre>"},{"location":"API/usuarios/borrar-usuario/#parametros-y-headers-de-la-solicitud","title":"Par\u00e1metros y Headers de la Solicitud","text":"<p>URL:</p> <p><code>usuarioId</code> (integer, required): El ID del usuario a Eliminar.</p> <p>Ningun campo es requerido en el body:</p> <p>Se debera incluir Authorization header con jwt creado con un usuario de tipo Admin en el metodo <code>POST /usuarios/login</code></p>"},{"location":"API/usuarios/borrar-usuario/#respuestas","title":"Respuestas","text":""},{"location":"API/usuarios/borrar-usuario/#exito","title":"\u00c9xito","text":"<p>C\u00f3digo: 200 OK</p> <pre><code>{\n  \"detalle\": \"Usuario borrado exitosamente\"\n}\n</code></pre>"},{"location":"API/usuarios/borrar-usuario/#errores","title":"Errores","text":""},{"location":"API/usuarios/borrar-usuario/#error-400-bad-request","title":"Error 400 - Bad Request","text":"<p>Causa: Id pasado en parametros no es un entero</p> <pre><code>{ \"error\": \"El par\u00e1metro ${paramName} debe ser un entero\" }\n</code></pre>"},{"location":"API/usuarios/borrar-usuario/#error-401-unauthorized","title":"Error 401 - Unauthorized","text":"<p>Causa: Token de autorizaci\u00f3n no proporcionado.</p> <pre><code>{ \"error\": \"Token de autorizaci\u00f3n no proporcionado\" }\n</code></pre> <p>Causa: Token de autorizaci\u00f3n vencido.</p> <pre><code>{ \"error\": \"El token expir\u00f3, inicie sesi\u00f3n nuevamente\" }\n</code></pre> <p>Causa: Token inv\u00e1lido</p> <pre><code>{ \"error\": \"Token inv\u00e1lido, inicie sesi\u00f3n nuevamente\" }\n</code></pre> <p>Causa: Token de autorizaci\u00f3n requerido no es de un usuario Admin.</p> <pre><code>{ \"error\": \"Debe iniciar sesi\u00f3n como administrador.\" }\n</code></pre>"},{"location":"API/usuarios/borrar-usuario/#error-500-internal-server-error","title":"Error 500 - Internal Server Error","text":"<p>Causa: Error del servidor o errores espec\u00edficos de Sequelize.</p> <pre><code>{\n  \"error\": \"Error al modificar el usuario\",\n  \"detalle\": [\"Detalle del error de Sequelize\"]\n}\n</code></pre>"},{"location":"API/usuarios/confirmar-usuario/","title":"Confirmar usuario","text":"<pre><code>POST /api/usuarios/confirmar\n</code></pre>"},{"location":"API/usuarios/confirmar-usuario/#parametros-y-headers-de-la-solicitud","title":"Par\u00e1metros y Headers de la Solicitud","text":"<p>La solicitud debe ser de tipo JSON y debe incluir los siguientes campos en el body:</p> <ul> <li><code>email</code> (string): El email del usuario.</li> </ul> <p>Se debera incluir Authorization header con jwt creado con un usuario de tipo Admin en el metodo <code>POST /usuarios/login</code></p>"},{"location":"API/usuarios/confirmar-usuario/#ejemplo-de-solicitud","title":"Ejemplo de Solicitud","text":"<pre><code>{\n  \"email\": \"usuario@example.com\"\n}\n</code></pre>"},{"location":"API/usuarios/confirmar-usuario/#respuestas","title":"Respuestas","text":""},{"location":"API/usuarios/confirmar-usuario/#exito","title":"\u00c9xito","text":"<p>C\u00f3digo: 202 Accepted</p> <pre><code>\"Usuario con mail: usuario@example.com activado exitosamente\"\n</code></pre>"},{"location":"API/usuarios/confirmar-usuario/#errores","title":"Errores","text":""},{"location":"API/usuarios/confirmar-usuario/#error-400-bad-request","title":"Error 400 - Bad Request","text":"<p>Causa: Falta el email.</p> <pre><code>{ \"error\": \"Email es obligatorio\" }\n</code></pre> <p>Causa: Usuario ya activado.</p> <pre><code>{ \"error\": \"Usuario ya esta activado\" }\n</code></pre>"},{"location":"API/usuarios/confirmar-usuario/#error-401-unauthorized","title":"Error 401 - Unauthorized","text":"<p>Causa: Token de autorizaci\u00f3n no proporcionado.</p> <pre><code>{ \"error\": \"Token de autorizaci\u00f3n no proporcionado\" }\n</code></pre> <p>Causa: Token de autorizaci\u00f3n vencido.</p> <pre><code>{ \"error\": \"El token expir\u00f3, inicie sesi\u00f3n nuevamente\" }\n</code></pre> <p>Causa: Token inv\u00e1lido</p> <pre><code>{ \"error\": \"Token inv\u00e1lido, inicie sesi\u00f3n nuevamente\" }\n</code></pre> <p>Causa: Token de autorizaci\u00f3n requerido no es de un usuario Admin.</p> <pre><code>{ \"error\": \"Debe iniciar sesi\u00f3n como administrador.\" }\n</code></pre>"},{"location":"API/usuarios/confirmar-usuario/#error-404-not-found","title":"Error 404 - Not Found","text":"<p>Causa: Usuario con ese email no existe.</p> <pre><code>{ \"error\": \"Usuario con ese mail no existe\" }\n</code></pre>"},{"location":"API/usuarios/confirmar-usuario/#error-500-internal-server-error","title":"Error 500 - Internal Server Error","text":"<p>Causa: Error general del servidor.</p> <pre><code>{\n  \"error\": \"Error al activar usuario\",\n  \"detalle\": \"Mensaje de error\"\n}\n</code></pre>"},{"location":"API/usuarios/introduccion/","title":"Introduccion","text":""},{"location":"API/usuarios/introduccion/#endpoint-apiusuarios","title":"Endpoint <code>/api/usuarios</code>","text":"<p>El endpoint de usuarios permite gestionar usuarios en el sistema. Proporciona funcionalidades para registrar nuevos usuarios, iniciar sesi\u00f3n, obtener informaci\u00f3n del usuario actual y administrar usuarios existentes, como cambiar contrase\u00f1as y desactivar cuentas.</p>"},{"location":"API/usuarios/introduccion/#usuarios","title":"Usuarios","text":"M\u00e9todo Descripci\u00f3n Tipo de Token <code>GET</code> /api/usuarios Obtener Usuarios Admin <code>GET</code> /api/usuarios/:id Obtener Usuario Admin <code>GET</code> /api/usuarios/inactivos Obtener Usuarios inactivos Admin <code>POST</code> /api/usuarios Nuevo Usuario Sin Token <code>POST</code> /api/usuarios/login Login Usuario Sin Token <code>POST</code> /api/usuarios/confirmar Confirmar Usuario Admin <code>PUT</code> /api/usuarios/:id Modificar Usuario Admin <code>DELETE</code> /api/usuarios/:id Borrar Usuario Admin"},{"location":"API/usuarios/login-usuario/","title":"Login usuario","text":"<pre><code>POST /api/usuarios/login\n</code></pre>"},{"location":"API/usuarios/login-usuario/#parametros-y-headers-de-la-solicitud","title":"Par\u00e1metros y Headers de la Solicitud","text":"<p>La solicitud debe ser de tipo JSON y debe incluir los siguientes campos en el body:</p> <ul> <li><code>email</code> (string): El email del usuario.</li> <li><code>password</code> (string): La contrase\u00f1a del usuario.</li> </ul> <p>No se deberan incluir Headers.</p>"},{"location":"API/usuarios/login-usuario/#ejemplo-de-solicitud","title":"Ejemplo de Solicitud","text":"<pre><code>{\n  \"email\": \"usuario@example.com\",\n  \"password\": \"password123\"\n}\n</code></pre>"},{"location":"API/usuarios/login-usuario/#respuestas","title":"Respuestas","text":""},{"location":"API/usuarios/login-usuario/#exito","title":"\u00c9xito","text":"<p>C\u00f3digo: 200 OK</p> <pre><code>{\n  \"token\": \"jwt_token\"\n}\n</code></pre>"},{"location":"API/usuarios/login-usuario/#errores","title":"Errores","text":""},{"location":"API/usuarios/login-usuario/#error-400-bad-request","title":"Error 400 - Bad Request","text":"<p>Causa: Falta el email o la contrase\u00f1a.</p> <pre><code>{ \"error\": \"Email y contrase\u00f1a son obligatorios\" }\n</code></pre>"},{"location":"API/usuarios/login-usuario/#error-401-unauthorized","title":"Error 401 - Unauthorized","text":"<p>Causa: Credenciales inv\u00e1lidas.</p> <pre><code>{ \"error\": \"Credenciales inv\u00e1lidas\" }\n</code></pre>"},{"location":"API/usuarios/login-usuario/#error-403-forbidden","title":"Error 403 - Forbidden","text":"<p>Causa: Usuario no activado.</p> <pre><code>{ \"error\": \"Usuario no activado\" }\n</code></pre>"},{"location":"API/usuarios/login-usuario/#error-404-not-found","title":"Error 404 - Not Found","text":"<p>Causa: Usuario no encontrado.</p> <pre><code>{ \"error\": \"No hay usuario con ese email\" }\n</code></pre>"},{"location":"API/usuarios/login-usuario/#error-500-internal-server-error","title":"Error 500 - Internal Server Error","text":"<p>Causa: Error del servidor o errores espec\u00edficos de Sequelize.</p> <pre><code>{\n  \"error\": \"Error al crear usuario\",\n  \"detalle\": [\"Detalle del error de Sequelize\"]\n}\n</code></pre> <p>Causa: Error general del servidor.</p> <pre><code>{\n  \"error\": \"Error al iniciar sesion\",\n  \"detalle\": \"Mensaje de error\"\n}\n</code></pre>"},{"location":"API/usuarios/modificar-usuario/","title":"Modificar usuario","text":"<pre><code>PUT /api/usuarios/id\n</code></pre>"},{"location":"API/usuarios/modificar-usuario/#parametros-y-headers-de-la-solicitud","title":"Par\u00e1metros y Headers de la Solicitud","text":"<p>URL:</p> <p><code>usuarioId</code> (integer, required): El ID del usuario a modificar.</p> <p>La solicitud debe ser de tipo JSON y debe incluir los siguientes campos en el body:</p> <ul> <li><code>rol</code> (string, optional): El rol del usuario.</li> <li><code>email</code> (string, optional): El correo electr\u00f3nico del usuario.</li> <li><code>password</code> (string, optional): La contrase\u00f1a del usuario.</li> <li><code>activo</code> (boolean, optional): El estado activo del usuario.</li> </ul> <p>Se debera incluir Authorization header con jwt creado con un usuario de tipo Admin en el metodo <code>POST /usuarios/login</code></p>"},{"location":"API/usuarios/modificar-usuario/#ejemplo-de-solicitud","title":"Ejemplo de Solicitud","text":"<pre><code>{\n  \"rol\": \"admin\",\n  \"email\": \"usuario@example.com\",\n  \"password\": \"password123\",\n  \"confirmPassword\": \"password123\"\n}\n</code></pre>"},{"location":"API/usuarios/modificar-usuario/#respuestas","title":"Respuestas","text":""},{"location":"API/usuarios/modificar-usuario/#exito","title":"\u00c9xito","text":"<p>C\u00f3digo: 200 OK</p> <pre><code>{\n  \"rol\": \"admin\",\n  \"email\": \"usuario@example.com\"\n}\n</code></pre>"},{"location":"API/usuarios/modificar-usuario/#errores","title":"Errores","text":""},{"location":"API/usuarios/modificar-usuario/#error-400-bad-request","title":"Error 400 - Bad Request","text":"<p>Causa: Id pasado en parametros no es un entero</p> <pre><code>{ \"error\": \"El par\u00e1metro ${paramName} debe ser un entero\" }\n</code></pre>"},{"location":"API/usuarios/modificar-usuario/#error-401-unauthorized","title":"Error 401 - Unauthorized","text":"<p>Causa: Token de autorizaci\u00f3n no proporcionado.</p> <pre><code>{ \"error\": \"Token de autorizaci\u00f3n no proporcionado\" }\n</code></pre> <p>Causa: Token de autorizaci\u00f3n vencido.</p> <pre><code>{ \"error\": \"El token expir\u00f3, inicie sesi\u00f3n nuevamente\" }\n</code></pre> <p>Causa: Token inv\u00e1lido</p> <pre><code>{ \"error\": \"Token inv\u00e1lido, inicie sesi\u00f3n nuevamente\" }\n</code></pre> <p>Causa: Token de autorizaci\u00f3n requerido no es de un usuario Admin.</p> <pre><code>{ \"error\": \"Debe iniciar sesi\u00f3n como administrador.\" }\n</code></pre>"},{"location":"API/usuarios/modificar-usuario/#error-500-internal-server-error","title":"Error 500 - Internal Server Error","text":"<p>Causa: Error del servidor o errores espec\u00edficos de Sequelize.</p> <pre><code>{\n  \"error\": \"Error al modificar el usuario\",\n  \"detalle\": [\"Detalle del error de Sequelize\"]\n}\n</code></pre>"},{"location":"API/usuarios/obtener-usuario/","title":"Obtener usuario","text":"<pre><code>GET /api/usuarios/id\n</code></pre>"},{"location":"API/usuarios/obtener-usuario/#parametros-y-headers-de-la-solicitud","title":"Par\u00e1metros y Headers de la Solicitud","text":"<p>URL:</p> <p><code>usuarioId</code> (integer, required): El ID del usuario.</p> <p>Se debera incluir Authorization header con jwt creado con un usuario de tipo Admin en el metodo <code>POST /usuarios/login</code></p>"},{"location":"API/usuarios/obtener-usuario/#respuestas","title":"Respuestas","text":""},{"location":"API/usuarios/obtener-usuario/#exito","title":"\u00c9xito","text":"<p>C\u00f3digo: 200 OK</p> <pre><code>{\n  \"id\": 2,\n  \"empleadoId\": 2,\n  \"rol\": \"normal\",\n  \"email\": \"ana@example.com\",\n  \"activo\": true,\n  \"createdAt\": \"2024-06-10T18:00:49.528Z\",\n  \"updatedAt\": \"2024-06-10T18:01:01.523Z\",\n  \"Empleado\": {\n    \"id\": 2,\n    \"nombre\": \"Ana Gomez\",\n    \"rol\": \"normal\",\n    \"cedula\": 87654321,\n    \"habilitado\": true,\n    \"createdAt\": \"2024-06-10T18:00:49.391Z\",\n    \"updatedAt\": \"2024-06-10T18:00:49.391Z\"\n  }\n}\n</code></pre>"},{"location":"API/usuarios/obtener-usuario/#errores","title":"Errores","text":""},{"location":"API/usuarios/obtener-usuario/#error-400-bad-request","title":"Error 400 - Bad Request","text":"<p>Causa: Id pasado en parametros no es un entero</p> <pre><code>{ \"error\": \"El par\u00e1metro ${paramName} debe ser un entero\" }\n</code></pre>"},{"location":"API/usuarios/obtener-usuario/#error-401-unauthorized","title":"Error 401 - Unauthorized","text":"<p>Causa: Token de autorizaci\u00f3n no proporcionado.</p> <pre><code>{ \"error\": \"Token de autorizaci\u00f3n no proporcionado\" }\n</code></pre> <p>Causa: Token de autorizaci\u00f3n vencido.</p> <pre><code>{ \"error\": \"El token expir\u00f3, inicie sesi\u00f3n nuevamente\" }\n</code></pre> <p>Causa: Token inv\u00e1lido</p> <pre><code>{ \"error\": \"Token inv\u00e1lido, inicie sesi\u00f3n nuevamente\" }\n</code></pre> <p>Causa: Token de autorizaci\u00f3n requerido no es de un usuario Admin.</p> <pre><code>{ \"error\": \"Debe iniciar sesi\u00f3n como administrador.\" }\n</code></pre>"},{"location":"API/usuarios/obtener-usuario/#error-500-internal-server-error","title":"Error 500 - Internal Server Error","text":"<p>Causa: Error del servidor o errores espec\u00edficos de Sequelize.</p> <pre><code>{\n  \"error\": \"Error al modificar el usuario\",\n  \"detalle\": [\"Detalle del error de Sequelize\"]\n}\n</code></pre>"},{"location":"API/usuarios/obtener-usuarios-inactivos/","title":"Obtener usuarios inactivos","text":"<pre><code>GET /api/usuarios\n</code></pre>"},{"location":"API/usuarios/obtener-usuarios-inactivos/#parametros-y-headers-de-la-solicitud","title":"Par\u00e1metros y Headers de la Solicitud","text":"<p>Sin Par\u00e1metros.</p> <p>Se debera incluir Authorization header con jwt creado con el usuario en el metodo <code>POST /usuarios/login</code></p>"},{"location":"API/usuarios/obtener-usuarios-inactivos/#respuestas","title":"Respuestas","text":""},{"location":"API/usuarios/obtener-usuarios-inactivos/#exito","title":"\u00c9xito","text":"<p>C\u00f3digo: 200 OK</p> <pre><code>[\n  {\n    \"id\": 2,\n    \"rol\": \"normal\",\n    \"email\": \"usuario@example.com\",\n    \"empleadoId\": 1,\n    \"activo\": false\n  },\n  {...}\n]\n</code></pre>"},{"location":"API/usuarios/obtener-usuarios-inactivos/#errores","title":"Errores","text":""},{"location":"API/usuarios/obtener-usuarios-inactivos/#error-401-unauthorized","title":"Error 401 - Unauthorized","text":"<p>Causa: Token de autorizaci\u00f3n no proporcionado.</p> <pre><code>{ \"error\": \"Token de autorizaci\u00f3n no proporcionado\" }\n</code></pre> <p>Causa: Token de autorizaci\u00f3n vencido.</p> <pre><code>{ \"error\": \"El token expir\u00f3, inicie sesi\u00f3n nuevamente\" }\n</code></pre> <p>Causa: Token inv\u00e1lido</p> <pre><code>{ \"error\": \"Token inv\u00e1lido, inicie sesi\u00f3n nuevamente\" }\n</code></pre> <p>Causa: Token de autorizaci\u00f3n requerido no es de un usuario Admin.</p> <pre><code>{ \"error\": \"Debe iniciar sesi\u00f3n como administrador.\" }\n</code></pre>"},{"location":"API/usuarios/obtener-usuarios-inactivos/#error-500-internal-server-error","title":"Error 500 - Internal Server Error","text":"<p>Causa: Error general del servidor.</p> <pre><code>{\n  \"error\": \"Error al obtener los usuario\",\n  \"detalle\": \"Mensaje de error\"\n}\n</code></pre>"},{"location":"API/usuarios/obtener-usuarios/","title":"Obtener usuarios","text":"<pre><code>GET /api/usuarios\n</code></pre>"},{"location":"API/usuarios/obtener-usuarios/#parametros-y-headers-de-la-solicitud","title":"Par\u00e1metros y Headers de la Solicitud","text":"<p>Sin Par\u00e1metros.</p> <p>Se debera incluir Authorization header con jwt creado con el usuario en el metodo <code>POST /usuarios/login</code></p>"},{"location":"API/usuarios/obtener-usuarios/#respuestas","title":"Respuestas","text":""},{"location":"API/usuarios/obtener-usuarios/#exito","title":"\u00c9xito","text":"<p>C\u00f3digo: 200 OK</p> <pre><code>[\n  {\n    \"id\": 1,\n    \"rol\": \"admin\",\n    \"email\": \"usuario@example.com\",\n    \"empleadoId\": 1,\n    \"activo\": true\n  },\n  {...}\n]\n</code></pre>"},{"location":"API/usuarios/obtener-usuarios/#errores","title":"Errores","text":""},{"location":"API/usuarios/obtener-usuarios/#error-401-unauthorized","title":"Error 401 - Unauthorized","text":"<p>Causa: Token de autorizaci\u00f3n no proporcionado.</p> <pre><code>{ \"error\": \"Token de autorizaci\u00f3n no proporcionado\" }\n</code></pre> <p>Causa: Token de autorizaci\u00f3n vencido.</p> <pre><code>{ \"error\": \"El token expir\u00f3, inicie sesi\u00f3n nuevamente\" }\n</code></pre> <p>Causa: Token inv\u00e1lido</p> <pre><code>{ \"error\": \"Token inv\u00e1lido, inicie sesi\u00f3n nuevamente\" }\n</code></pre> <p>Causa: Token de autorizaci\u00f3n requerido no es de un usuario Admin.</p> <pre><code>{ \"error\": \"Debe iniciar sesi\u00f3n como administrador.\" }\n</code></pre>"},{"location":"API/usuarios/obtener-usuarios/#error-500-internal-server-error","title":"Error 500 - Internal Server Error","text":"<p>Causa: Error general del servidor.</p> <pre><code>{\n  \"error\": \"Error al obtener los usuario\",\n  \"detalle\": \"Mensaje de error\"\n}\n</code></pre>"},{"location":"API/usuarios/registrar-usuario/","title":"Registrar usuario","text":"<pre><code>POST /api/usuarios\n</code></pre>"},{"location":"API/usuarios/registrar-usuario/#parametros-y-headers-de-la-solicitud","title":"Par\u00e1metros y Headers de la Solicitud","text":"<p>La solicitud debe ser de tipo JSON y debe incluir los siguientes campos en el body:</p> <ul> <li><code>rol</code> (string): El rol del usuario (debe ser 'admin' o 'normal').</li> <li><code>email</code> (string): El email del usuario.</li> <li><code>password</code> (string): La contrase\u00f1a del usuario.</li> <li><code>confirmPassword</code> (string): Confirmaci\u00f3n de la contrase\u00f1a (debe coincidir con <code>password</code>).</li> <li><code>empleadoId</code> (integer): ID del empleado asociado al usuario.</li> </ul> <p>No se deberan incluir Headers.</p>"},{"location":"API/usuarios/registrar-usuario/#ejemplo-de-solicitud","title":"Ejemplo de Solicitud","text":"<pre><code>{\n  \"rol\": \"admin\",\n  \"email\": \"usuario@example.com\",\n  \"password\": \"password123\",\n  \"confirmPassword\": \"password123\",\n  \"empleadoId\": 1\n}\n</code></pre>"},{"location":"API/usuarios/registrar-usuario/#respuestas","title":"Respuestas","text":""},{"location":"API/usuarios/registrar-usuario/#exito","title":"\u00c9xito","text":"<p>C\u00f3digo: 201 Created</p> <pre><code>{\n  \"id\": 1,\n  \"email\": \"usuario@example.com\",\n  \"empleadoId\": 1,\n  \"rol\": \"admin\",\n  \"activo\": false\n}\n</code></pre>"},{"location":"API/usuarios/registrar-usuario/#errores","title":"Errores","text":""},{"location":"API/usuarios/registrar-usuario/#error-400-bad-request","title":"Error 400 - Bad Request","text":"<p>Causa: Alg\u00fan campo obligatorio falta o es inv\u00e1lido.</p> <pre><code>{ \"error\": \"Todos los campos son obligatorios\" }\n</code></pre> <p>Causa: El email no es v\u00e1lido.</p> <pre><code>{ \"error\": \"Email inv\u00e1lido\" }\n</code></pre> <p>Causa: Las contrase\u00f1as no coinciden.</p> <pre><code>{ \"error\": \"Las contrase\u00f1as no coinciden\" }\n</code></pre> <p>Causa: El rol no es v\u00e1lido.</p> <pre><code>{ \"error\": \"Rol inv\u00e1lido\" }\n</code></pre> <p>Causa: El empleado no existe.</p> <pre><code>{ \"error\": \"Empleado no existe\" }\n</code></pre>"},{"location":"API/usuarios/registrar-usuario/#error-500-internal-server-error","title":"Error 500 - Internal Server Error","text":"<p>Causa: Error del servidor o errores espec\u00edficos de Sequelize.</p> <pre><code>{\n  \"error\": \"Error al crear usuario\",\n  \"detalle\": [\"Detalle del error de Sequelize\"]\n}\n</code></pre> <p>Causa: Error general del servidor.</p> <pre><code>{\n  \"error\": \"Error al crear usuario\",\n  \"detalle\": \"Mensaje de error\"\n}\n</code></pre>"},{"location":"Modelos/completo/","title":"Documentaci\u00f3n de los Modelos","text":""},{"location":"Modelos/completo/#referencia-visual","title":"Referencia Visual","text":""},{"location":"Modelos/completo/#empleados","title":"Empleados","text":"<ul> <li>id <code>int</code> | <code>PRIMARY KEY</code>, <code>SERIAL</code>: Identificador \u00fanico del empleado</li> <li>nombre <code>varchar(255)</code> | <code>NOT NULL</code>: Nombre del empleado</li> <li>rol <code>varchar(255)</code> | <code>NOT NULL</code>: Rol del empleado</li> <li>cedula <code>int</code> | <code>NOT NULL</code>: N\u00famero de c\u00e9dula del empleado</li> <li>habilitado <code>boolean</code> | <code>DEFAULT true</code>: Estado de habilitaci\u00f3n del empleado</li> <li>createdAt <code>timestamp</code> | <code>NOT NULL</code>: Fecha de creaci\u00f3n del registro</li> <li>updatedAt <code>timestamp</code> | <code>NOT NULL</code>: Fecha de \u00faltima actualizaci\u00f3n del registro</li> </ul>"},{"location":"Modelos/completo/#telefonos","title":"Telefonos","text":"<ul> <li>id <code>int</code> | <code>PRIMARY KEY</code>, <code>SERIAL</code>: Identificador \u00fanico del tel\u00e9fono</li> <li>empleadoId <code>int</code> | <code>FOREIGN KEY</code>, <code>REFERENCES Empleados(id)</code>, <code>NOT NULL</code>: ID del empleado asociado al tel\u00e9fono</li> <li>telefono <code>varchar(255)</code> | <code>NOT NULL</code>, <code>UNIQUE</code>: N\u00famero de tel\u00e9fono</li> <li>createdAt <code>timestamp</code> | <code>NOT NULL</code>: Fecha de creaci\u00f3n del registro</li> <li>updatedAt <code>timestamp</code> | <code>NOT NULL</code>: Fecha de \u00faltima actualizaci\u00f3n del registro</li> </ul>"},{"location":"Modelos/completo/#usuarios","title":"Usuarios","text":"<ul> <li>id <code>int</code> | <code>PRIMARY KEY</code>, <code>SERIAL</code>: Identificador \u00fanico del usuario</li> <li>empleadoId <code>int</code> | <code>FOREIGN KEY</code>, <code>REFERENCES Empleados(id)</code>, <code>NOT NULL</code>: ID del empleado asociado al usuario</li> <li>rol <code>varchar(255)</code> | <code>NOT NULL</code>: Rol del usuario</li> <li>email <code>varchar(255)</code> | <code>NOT NULL</code>, <code>UNIQUE</code>: Direcci\u00f3n de correo electr\u00f3nico del usuario</li> <li>password <code>varchar(255)</code> | <code>NOT NULL</code>: Contrase\u00f1a del usuario</li> <li>activo <code>boolean</code> | <code>DEFAULT false</code>: Estado de activaci\u00f3n del usuario</li> <li>createdAt <code>timestamp</code> | <code>NOT NULL</code>: Fecha de creaci\u00f3n del registro</li> <li>updatedAt <code>timestamp</code> | <code>NOT NULL</code>: Fecha de \u00faltima actualizaci\u00f3n del registro</li> </ul>"},{"location":"Modelos/completo/#camiones","title":"Camiones","text":"<ul> <li>id <code>int</code> | <code>PRIMARY KEY</code>, <code>SERIAL</code>: Identificador \u00fanico del cami\u00f3n</li> <li>matricula <code>varchar(255)</code> | <code>NOT NULL</code>, <code>UNIQUE</code>: Matr\u00edcula del cami\u00f3n</li> <li>modelo <code>varchar(255)</code> | <code>NOT NULL</code>: Modelo del cami\u00f3n</li> <li>anio <code>int</code>: A\u00f1o de fabricaci\u00f3n del cami\u00f3n</li> <li>estado <code>varchar(255)</code>: Estado del cami\u00f3n</li> <li>createdAt <code>timestamp</code> | <code>NOT NULL</code>: Fecha de creaci\u00f3n del registro</li> <li>updatedAt <code>timestamp</code> | <code>NOT NULL</code>: Fecha de \u00faltima actualizaci\u00f3n del registro</li> </ul>"},{"location":"Modelos/completo/#servicios","title":"Servicios","text":"<ul> <li>id <code>int</code> | <code>PRIMARY KEY</code>, <code>SERIAL</code>: Identificador \u00fanico del servicio</li> <li>camionId <code>int</code> | <code>FOREIGN KEY</code>, <code>REFERENCES Camiones(id)</code>, <code>NOT NULL</code>: ID del cami\u00f3n asociado al servicio</li> <li>fecha <code>timestamp</code> | <code>NOT NULL</code>: Fecha del servicio</li> <li>tipo <code>varchar(255)</code> | <code>NOT NULL</code>: Tipo de servicio</li> <li>precio <code>float</code>: Precio del servicio</li> <li>descripcion <code>varchar(255)</code>: Descripci\u00f3n del servicio</li> <li>createdAt <code>timestamp</code> | <code>NOT NULL</code>: Fecha de creaci\u00f3n del registro</li> <li>updatedAt <code>timestamp</code> | <code>NOT NULL</code>: Fecha de \u00faltima actualizaci\u00f3n del registro</li> </ul>"},{"location":"Modelos/completo/#historicousocamion","title":"HistoricoUsoCamion","text":"<ul> <li>id <code>int</code> | <code>PRIMARY KEY</code>, <code>SERIAL</code>: Identificador \u00fanico del registro hist\u00f3rico</li> <li>empleadoId <code>int</code> | <code>FOREIGN KEY</code>, <code>REFERENCES Empleados(id)</code>, <code>NOT NULL</code>: ID del empleado asociado al registro hist\u00f3rico</li> <li>camionId <code>int</code> | <code>FOREIGN KEY</code>, <code>REFERENCES Camiones(id)</code>, <code>NOT NULL</code>: ID del cami\u00f3n asociado al registro hist\u00f3rico</li> <li>fechaInicio <code>timestamp</code> | <code>NOT NULL</code>: Fecha de inicio del uso del cami\u00f3n</li> <li>fechaFin <code>timestamp</code>: Fecha de fin del uso del cami\u00f3n</li> <li>createdAt <code>timestamp</code> | <code>NOT NULL</code>: Fecha de creaci\u00f3n del registro</li> <li>updatedAt <code>timestamp</code> | <code>NOT NULL</code>: Fecha de \u00faltima actualizaci\u00f3n del registro</li> </ul>"},{"location":"Modelos/completo/#jornales","title":"Jornales","text":"<ul> <li>id <code>int</code> | <code>PRIMARY KEY</code>, <code>SERIAL</code>: Identificador \u00fanico del jornal</li> <li>empleadoId <code>int</code> | <code>FOREIGN KEY</code>, <code>REFERENCES Empleados(id)</code>, <code>NOT NULL</code>: ID del empleado asociado al jornal</li> <li>fecha <code>timestamp</code> | <code>NOT NULL</code>: Fecha del jornal</li> <li>entrada <code>time</code>: Hora de entrada del jornal</li> <li>salida <code>time</code>: Hora de salida del jornal</li> <li>horasExtra <code>float</code> | <code>DEFAULT '0'</code>: Horas extra trabajadas</li> <li>usuarioId <code>int</code> | <code>FOREIGN KEY</code>, <code>REFERENCES Usuarios(id)</code>: ID del usuario que registr\u00f3 el jornal</li> <li>createdAt <code>timestamp</code> | <code>NOT NULL</code>: Fecha de creaci\u00f3n del registro</li> <li>updatedAt <code>timestamp</code> | <code>NOT NULL</code>: Fecha de \u00faltima actualizaci\u00f3n del registro</li> </ul>"},{"location":"Modelos/usuario/","title":"Usuario","text":""},{"location":"Modelos/usuario/#usuarios","title":"Usuarios","text":""},{"location":"Modelos/usuario/#campos-del-modelo","title":"Campos del Modelo","text":"<ul> <li><code>id</code> (INTEGER): Clave primaria autoincremental.</li> <li><code>empleadoId</code> (INTEGER): ID del empleado asociado al usuario. Este campo es obligatorio y \u00fanico.</li> <li><code>rol</code> (ENUM): Rol del usuario, que puede ser 'admin' o 'normal'. Este campo es obligatorio.</li> <li><code>email</code> (STRING): Correo electr\u00f3nico del usuario. Este campo es obligatorio y \u00fanico.</li> <li><code>password</code> (STRING): Contrase\u00f1a del usuario. Este campo es obligatorio.</li> <li><code>activo</code> (BOOLEAN): Estado de activaci\u00f3n del usuario. Por defecto, es <code>false</code>.</li> </ul>"},{"location":"Modelos/usuario/#relaciones","title":"Relaciones","text":"<ul> <li>Empleados - Usuarios</li> <li>Relaci\u00f3n uno a uno (1:1) donde un usuario tiene un empleado asociado.</li> </ul>"}]}